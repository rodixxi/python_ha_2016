%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<< /F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 5 0 R /F5 12 0 R /F6 13 0 R >>
endobj
2 0 obj
<< /BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font >>
endobj
3 0 obj
<< /BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font >>
endobj
4 0 obj
<< /BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font >>
endobj
5 0 obj
<< /BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font >>
endobj
6 0 obj
<< /A << /S /URI /Type /Action /URI (https://en.wikipedia.org/wiki/Test-driven_development) >> /Border [ 0 0 0 ] /Rect [ 62.69291 318.7736 300.0029 330.7736 ] /Subtype /Link /Type /Annot >>
endobj
7 0 obj
<< /A << /S /URI /Type /Action /URI (http://hg.python.org/cpython/file/tip/Lib/test) >> /Border [ 0 0 0 ] /Rect [ 124.6029 162.0236 312.4929 174.0236 ] /Subtype /Link /Type /Annot >>
endobj
8 0 obj
<< /A << /S /URI /Type /Action /URI (https://github.com/networkx/networkx/tree/master/networkx) >> /Border [ 0 0 0 ] /Rect [ 134.5929 126.0236 395.2429 138.0236 ] /Subtype /Link /Type /Annot >>
endobj
9 0 obj
<< /A << /S /URI /Type /Action /URI (http://sqlite.org/testing.html) >> /Border [ 0 0 0 ] /Rect [ 123.4829 90.02362 242.9829 102.0236 ] /Subtype /Link /Type /Annot >>
endobj
10 0 obj
<< /Annots [ 6 0 R 7 0 R 8 0 R 9 0 R ] /Contents 61 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 60 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
11 0 obj
<< /A << /S /URI /Type /Action /URI (https://docs.djangoproject.com/en/1.6/topics/testing/) >> /Border [ 0 0 0 ] /Rect [ 195.1729 750.0236 425.2929 762.0236 ] /Subtype /Link /Type /Annot >>
endobj
12 0 obj
<< /BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font >>
endobj
13 0 obj
<< /BaseFont /Courier-Oblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font >>
endobj
14 0 obj
<< /Annots [ 11 0 R ] /Contents 62 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 60 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
15 0 obj
<< /Contents 63 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 60 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
16 0 obj
<< /A << /S /URI /Type /Action /URI (https://docs.python.org/library/unittest.html#assert-methods) >> /Border [ 0 0 0 ] /Rect [ 226.3129 726.0236 488.6429 738.0236 ] /Subtype /Link /Type /Annot >>
endobj
17 0 obj
<< /A << /S /URI /Type /Action /URI (file:///home/juan/proyectos/python_ha_2016/13_clase11/perm.py) >> /Border [ 0 0 0 ] /Rect [ 98.27291 170.8236 137.1729 182.8236 ] /Subtype /Link /Type /Annot >>
endobj
18 0 obj
<< /A << /S /URI /Type /Action /URI (file:///home/juan/proyectos/python_ha_2016/13_clase11/test_perm_ut.py) >> /Border [ 0 0 0 ] /Rect [ 156.6329 170.8236 231.1129 182.8236 ] /Subtype /Link /Type /Annot >>
endobj
19 0 obj
<< /Annots [ 16 0 R 17 0 R 18 0 R ] /Contents 64 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 60 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
20 0 obj
<< /A << /S /URI /Type /Action /URI (file:///home/juan/proyectos/python_ha_2016/13_clase11/fib.py) >> /Border [ 0 0 0 ] /Rect [ 85.69291 426.0236 112.3729 438.0236 ] /Subtype /Link /Type /Annot >>
endobj
21 0 obj
<< /A << /S /URI /Type /Action /URI (file:///home/juan/proyectos/python_ha_2016/13_clase11/test_fib.py) >> /Border [ 0 0 0 ] /Rect [ 97.92433 408.0236 147.3957 420.0236 ] /Subtype /Link /Type /Annot >>
endobj
22 0 obj
<< /A << /S /URI /Type /Action /URI (file:///home/juan/proyectos/python_ha_2016/13_clase11/count.py) >> /Border [ 0 0 0 ] /Rect [ 104.5929 183.0236 145.1729 195.0236 ] /Subtype /Link /Type /Annot >>
endobj
23 0 obj
<< /A << /S /URI /Type /Action /URI (file:///home/juan/proyectos/python_ha_2016/13_clase11/test_count_ut.py) >> /Border [ 0 0 0 ] /Rect [ 164.6329 183.0236 240.7929 195.0236 ] /Subtype /Link /Type /Annot >>
endobj
24 0 obj
<< /Annots [ 20 0 R 21 0 R 22 0 R 23 0 R ] /Contents 65 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 60 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
25 0 obj
<< /Contents 66 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 60 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
26 0 obj
<< /A << /S /URI /Type /Action /URI (https://docs.python.org/2/library/pdb.html#debugger-commands) >> /Border [ 0 0 0 ] /Rect [ 162.1629 663.0236 442.8429 675.0236 ] /Subtype /Link /Type /Annot >>
endobj
27 0 obj
<< /A << /S /URI /Type /Action /URI (file:///home/juan/proyectos/python_ha_2016/13_clase11/prime.py) >> /Border [ 0 0 0 ] /Rect [ 85.69291 372.6236 126.8129 384.6236 ] /Subtype /Link /Type /Annot >>
endobj
28 0 obj
<< /A << /S /URI /Type /Action /URI (file:///home/juan/proyectos/python_ha_2016/13_clase11/test_prime_ut.py) >> /Border [ 0 0 0 ] /Rect [ 106.8129 354.6236 183.5129 366.6236 ] /Subtype /Link /Type /Annot >>
endobj
29 0 obj
<< /Annots [ 26 0 R 27 0 R 28 0 R ] /Contents 67 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 60 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
30 0 obj
<< /Outlines 32 0 R /PageLabels 68 0 R /PageMode /UseNone /Pages 60 0 R /Type /Catalog >>
endobj
31 0 obj
<< /Author () /CreationDate (D:20161208170726+03'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20161208170726+03'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (Unit testing with Python) /Trapped /False >>
endobj
32 0 obj
<< /Count 27 /First 33 0 R /Last 59 0 R /Type /Outlines >>
endobj
33 0 obj
<< /Dest [ 10 0 R /XYZ 62.69291 729.0236 0 ] /Next 34 0 R /Parent 32 0 R /Title (About this talk) >>
endobj
34 0 obj
<< /Dest [ 10 0 R /XYZ 62.69291 666.0236 0 ] /Next 35 0 R /Parent 32 0 R /Prev 33 0 R /Title (Outline) >>
endobj
35 0 obj
<< /Dest [ 10 0 R /XYZ 62.69291 573.0236 0 ] /Next 36 0 R /Parent 32 0 R /Prev 34 0 R /Title (Testing is considered one of the cornerstones to good software.) >>
endobj
36 0 obj
<< /Dest [ 10 0 R /XYZ 62.69291 357.0236 0 ] /Next 37 0 R /Parent 32 0 R /Prev 35 0 R /Title (Test driven development) >>
endobj
37 0 obj
<< /Dest [ 10 0 R /XYZ 62.69291 222.0236 0 ] /Next 38 0 R /Parent 32 0 R /Prev 36 0 R /Title (Examples of unit tests of different libraries) >>
endobj
38 0 obj
<< /Dest [ 14 0 R /XYZ 62.69291 723.0236 0 ] /Next 39 0 R /Parent 32 0 R /Prev 37 0 R /Title (Where to put tests?) >>
endobj
39 0 obj
<< /Dest [ 14 0 R /XYZ 62.69291 588.0236 0 ] /Next 40 0 R /Parent 32 0 R /Prev 38 0 R /Title (Python unittest module) >>
endobj
40 0 obj
<< /Dest [ 14 0 R /XYZ 62.69291 417.0236 0 ] /Next 41 0 R /Parent 32 0 R /Prev 39 0 R /Title (unittest example) >>
endobj
41 0 obj
<< /Dest [ 14 0 R /XYZ 62.69291 230.8236 0 ] /Next 42 0 R /Parent 32 0 R /Prev 40 0 R /Title (nosetests framework) >>
endobj
42 0 obj
<< /Dest [ 15 0 R /XYZ 62.69291 729.0236 0 ] /Next 43 0 R /Parent 32 0 R /Prev 41 0 R /Title (nose example) >>
endobj
43 0 obj
<< /Dest [ 15 0 R /XYZ 62.69291 590.8236 0 ] /Next 44 0 R /Parent 32 0 R /Prev 42 0 R /Title (Basic atoms of unit tests) >>
endobj
44 0 obj
<< /Dest [ 15 0 R /XYZ 62.69291 449.8236 0 ] /Next 45 0 R /Parent 32 0 R /Prev 43 0 R /Title (Assertions) >>
endobj
45 0 obj
<< /Dest [ 15 0 R /XYZ 62.69291 338.8236 0 ] /Next 46 0 R /Parent 32 0 R /Prev 44 0 R /Title (Assertion example) >>
endobj
46 0 obj
<< /Dest [ 19 0 R /XYZ 62.69291 765.0236 0 ] /Next 47 0 R /Parent 32 0 R /Prev 45 0 R /Title (What assertions are available?) >>
endobj
47 0 obj
<< /Dest [ 19 0 R /XYZ 62.69291 684.0236 0 ] /Next 48 0 R /Parent 32 0 R /Prev 46 0 R /Title (List of Assertions available) >>
endobj
48 0 obj
<< /Dest [ 19 0 R /XYZ 62.69291 209.8236 0 ] /Next 49 0 R /Parent 32 0 R /Prev 47 0 R /Title (Full example: A working test \(permutations\)) >>
endobj
49 0 obj
<< /Dest [ 24 0 R /XYZ 62.69291 765.0236 0 ] /Next 50 0 R /Parent 32 0 R /Prev 48 0 R /Title (How to debug a failing test) >>
endobj
50 0 obj
<< /Dest [ 24 0 R /XYZ 62.69291 672.0236 0 ] /Next 51 0 R /Parent 32 0 R /Prev 49 0 R /Title (Testing and debugging) >>
endobj
51 0 obj
<< /Dest [ 24 0 R /XYZ 62.69291 573.0236 0 ] /Next 52 0 R /Parent 32 0 R /Prev 50 0 R /Title (Testing and debugging) >>
endobj
52 0 obj
<< /Dest [ 24 0 R /XYZ 62.69291 474.0236 0 ] /Next 53 0 R /Parent 32 0 R /Prev 51 0 R /Title (Example: Test inheritance \(Fibonacci numbers\)) >>
endobj
53 0 obj
<< /Dest [ 24 0 R /XYZ 62.69291 267.0236 0 ] /Next 54 0 R /Parent 32 0 R /Prev 52 0 R /Title (Example: Test-driven development \(counting function\)) >>
endobj
54 0 obj
<< /Dest [ 25 0 R /XYZ 62.69291 727.8661 0 ] /Next 55 0 R /Parent 32 0 R /Prev 53 0 R /Title (Recommendations for making tests) >>
endobj
55 0 obj
<< /Dest [ 25 0 R /XYZ 62.69291 514.8661 0 ] /Next 56 0 R /Parent 32 0 R /Prev 54 0 R /Title (Conclusions) >>
endobj
56 0 obj
<< /Dest [ 25 0 R /XYZ 62.69291 337.8661 0 ] /Next 57 0 R /Parent 32 0 R /Prev 55 0 R /Title (Extensions we haven't covered) >>
endobj
57 0 obj
<< /Dest [ 25 0 R /XYZ 62.69291 196.8661 0 ] /Next 58 0 R /Parent 32 0 R /Prev 56 0 R /Title (Extra: Invoking the python debugger \(not with unittest\)) >>
endobj
58 0 obj
<< /Dest [ 29 0 R /XYZ 62.69291 651.0236 0 ] /Next 59 0 R /Parent 32 0 R /Prev 57 0 R /Title (Invoking the python debugger \(unittest\)) >>
endobj
59 0 obj
<< /Dest [ 29 0 R /XYZ 62.69291 441.6236 0 ] /Parent 32 0 R /Prev 58 0 R /Title (Example: Debugging \(prime numbers\) \(not with unittest\)) >>
endobj
60 0 obj
<< /Count 7 /Kids [ 10 0 R 14 0 R 15 0 R 19 0 R 24 0 R 25 0 R 29 0 R ] /Type /Pages >>
endobj
61 0 obj
<< /Length 9186 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 120.4949 0 Td (Unit testing with Python) Tj T* -120.4949 0 Td ET
Q
Q
q
1 0 0 1 62.69291 708.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (About this talk) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 678.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.124431 Tw (This talk discusses the basic concepts of unit testing in Python from a practical side. It is designed not) Tj T* 0 Tw (only as an introduction to unit testing in Python, but unit testing in general.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 645.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Outline) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 633.0236 cm
Q
q
1 0 0 1 62.69291 633.0236 cm
Q
q
1 0 0 1 62.69291 621.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (First, we will discuss what testing is and why we would want to do it.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 615.0236 cm
Q
q
1 0 0 1 62.69291 603.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Then, we will discuss basic unit testing frameworks in Python.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 597.0236 cm
Q
q
1 0 0 1 62.69291 585.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Finally, we will discuss tips and tricks of the ) Tj /F3 10 Tf 0 0 0 rg (unittest ) Tj /F1 10 Tf 0 0 0 rg (framework.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 585.0236 cm
Q
q
1 0 0 1 62.69291 531.0236 cm
q
BT 1 0 0 1 0 24.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Testing is considered one of the cornerstones to good) Tj T* (software.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 519.0236 cm
Q
q
1 0 0 1 62.69291 519.0236 cm
Q
q
1 0 0 1 62.69291 417.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Benefits according to wikipedia:) Tj T* ET
Q
Q
q
1 0 0 1 23 81 cm
Q
q
1 0 0 1 23 81 cm
Q
q
1 0 0 1 23 69 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Find problems early) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 63 cm
Q
q
1 0 0 1 23 51 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Find regressions when you make big change) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 33 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Simplifies integration) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Documentation) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Design) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 411.0236 cm
Q
q
1 0 0 1 62.69291 387.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .728443 Tw 12 TL /F1 10 Tf 0 0 0 rg (This talk is about systematically doing so ) Tj /F2 10 Tf (automatically ) Tj /F1 10 Tf (and ) Tj /F2 10 Tf (systematically) Tj /F1 10 Tf (, instead of just testing) Tj T* 0 Tw (only while developing.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 381.0236 cm
Q
q
1 0 0 1 62.69291 369.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The key to making testing work is ) Tj /F4 10 Tf (balance) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 369.0236 cm
Q
q
1 0 0 1 62.69291 336.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Test driven development) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 318.0236 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (https://en.wikipedia.org/wiki/Test-driven_development) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 312.0236 cm
Q
q
1 0 0 1 62.69291 312.0236 cm
Q
q
1 0 0 1 62.69291 300.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Testing taken to the extreme) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 294.0236 cm
Q
q
1 0 0 1 62.69291 282.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You write the tests first, then write code to make the test pass.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 276.0236 cm
Q
q
1 0 0 1 62.69291 264.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Nothing exists without a test.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 258.0236 cm
Q
q
1 0 0 1 62.69291 234.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .023798 Tw (You can feel free to change anything and not think about it, as long as the tests pass you are good to) Tj T* 0 Tw (go.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 234.0236 cm
Q
q
1 0 0 1 62.69291 201.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Examples of unit tests of different libraries) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 183.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's look at these existing projects and what they do:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 177.0236 cm
Q
q
1 0 0 1 62.69291 177.0236 cm
Q
q
1 0 0 1 62.69291 147.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (python - ) Tj 0 0 .501961 rg (http://hg.python.org/cpython/file/tip/Lib/test) Tj T* ET
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (never-ending screens of huge files.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 141.0236 cm
Q
q
1 0 0 1 62.69291 111.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (networkx - ) Tj 0 0 .501961 rg (https://github.com/networkx/networkx/tree/master/networkx) Tj T* ET
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (All tests collected in tests/ directory in each module directory.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 105.0236 cm
Q
q
1 0 0 1 62.69291 93.02362 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (sqlite3 - ) Tj 0 0 .501961 rg (http://sqlite.org/testing.html) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 87.02362 cm
Q
 
endstream
endobj
62 0 obj
<< /Length 12092 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 735.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (django web framework - ) Tj 0 0 .501961 rg (https://docs.djangoproject.com/en/1.6/topics/testing/) Tj T* ET
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Frameworks need frameworks for testing, too.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 735.0236 cm
Q
q
1 0 0 1 62.69291 702.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Where to put tests?) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 690.0236 cm
Q
q
1 0 0 1 62.69291 690.0236 cm
Q
q
1 0 0 1 62.69291 678.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (General practice is to put your tests in a module separate from the main code itself.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 672.0236 cm
Q
q
1 0 0 1 62.69291 648.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 3.516136 Tw (The name should include the word "test" at the beginning \(to be automatically discoverable) Tj T* 0 Tw (automatically by most test runners\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 642.0236 cm
Q
q
1 0 0 1 62.69291 630.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (My recommendation: either call it ) Tj /F3 10 Tf 0 0 0 rg (NAME_test.py ) Tj /F1 10 Tf 0 0 0 rg (or ) Tj /F3 10 Tf 0 0 0 rg (test_NAME.py) Tj /F1 10 Tf 0 0 0 rg (. I use the second.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 624.0236 cm
Q
q
1 0 0 1 62.69291 600.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.261984 Tw 12 TL /F1 10 Tf 0 0 0 rg (The modules must be importable \(no side effects when run, if importing has any side-effects they) Tj T* 0 Tw (should be put in a ) Tj /F3 10 Tf 0 0 0 rg (if) Tj ( ) Tj (__name__ ==) Tj ( ) Tj ("__main__":) Tj /F1 10 Tf 0 0 0 rg (\) block.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 600.0236 cm
Q
q
1 0 0 1 62.69291 567.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Python ) Tj /F3 17.5 Tf 0 0 0 rg (unittest ) Tj /F2 17.5 Tf 0 0 0 rg (module) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 555.0236 cm
Q
q
1 0 0 1 62.69291 555.0236 cm
Q
q
1 0 0 1 62.69291 543.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Basic unit testing framework included in the standard library \(based on JUnit/xUnit\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 537.0236 cm
Q
q
1 0 0 1 62.69291 525.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (It is \(perhaps too much?\) object-oriented and only basic interface to running tests.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 519.0236 cm
Q
q
1 0 0 1 62.69291 495.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 4.039318 Tw (It is a base that other frameworks build on, but unless you need complex inheritance; of) Tj T* 0 Tw (setup/teardown code, you probably don't need to write using this.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 495.0236 cm
Q
q
1 0 0 1 62.69291 477.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Basic usage:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 471.0236 cm
Q
q
1 0 0 1 62.69291 471.0236 cm
Q
q
1 0 0 1 62.69291 459.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Running module: ) Tj /F3 10 Tf 0 0 0 rg (python) Tj ( ) Tj (test_NAME.py) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 453.0236 cm
Q
q
1 0 0 1 62.69291 429.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 15.12442 Tw 12 TL /F1 10 Tf 0 0 0 rg (Discovering all tests in modules named ) Tj /F3 10 Tf 0 0 0 rg (test*.py ) Tj /F1 10 Tf 0 0 0 rg (and running them:) Tj T* 0 Tw /F3 10 Tf 0 0 0 rg (python) Tj ( ) Tj (-m) Tj ( ) Tj (unittest) Tj ( ) Tj (discover) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 429.0236 cm
Q
q
1 0 0 1 62.69291 396.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (unittest ) Tj /F2 17.5 Tf 0 0 0 rg (example) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 242.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 144 re B*
Q
q
.960784 .960784 .862745 rg
n 0 120 30 12 re f*
.960784 .960784 .862745 rg
n 36 120 126 12 re f*
.960784 .960784 .862745 rg
n 162 120 6 12 re f*
.960784 .960784 .862745 rg
n 168 120 48 12 re f*
.960784 .960784 .862745 rg
n 216 120 6 12 re f*
.960784 .960784 .862745 rg
n 222 120 48 12 re f*
.960784 .960784 .862745 rg
n 270 120 12 12 re f*
.960784 .960784 .862745 rg
n 24 96 18 12 re f*
.960784 .960784 .862745 rg
n 48 96 72 12 re f*
.960784 .960784 .862745 rg
n 120 96 6 12 re f*
.960784 .960784 .862745 rg
n 126 96 24 12 re f*
.960784 .960784 .862745 rg
n 150 96 12 12 re f*
.960784 .960784 .862745 rg
n 48 84 360 12 re f*
.960784 .960784 .862745 rg
n 24 72 18 12 re f*
.960784 .960784 .862745 rg
n 48 72 6 12 re f*
.960784 .960784 .862745 rg
n 60 72 24 12 re f*
.960784 .960784 .862745 rg
n 84 72 6 12 re f*
.960784 .960784 .862745 rg
n 90 72 30 12 re f*
.960784 .960784 .862745 rg
n 120 72 6 12 re f*
.960784 .960784 .862745 rg
n 126 72 12 12 re f*
.960784 .960784 .862745 rg
n 138 72 12 12 re f*
.960784 .960784 .862745 rg
n 48 60 36 12 re f*
.960784 .960784 .862745 rg
n 84 60 6 12 re f*
.960784 .960784 .862745 rg
n 90 60 42 12 re f*
.960784 .960784 .862745 rg
n 132 60 6 12 re f*
.960784 .960784 .862745 rg
n 138 60 18 12 re f*
.960784 .960784 .862745 rg
n 156 60 6 12 re f*
.960784 .960784 .862745 rg
n 48 48 24 12 re f*
.960784 .960784 .862745 rg
n 72 48 6 12 re f*
.960784 .960784 .862745 rg
n 78 48 18 12 re f*
.960784 .960784 .862745 rg
n 96 48 6 12 re f*
.960784 .960784 .862745 rg
n 102 48 24 12 re f*
.960784 .960784 .862745 rg
n 126 48 12 12 re f*
.960784 .960784 .862745 rg
n 48 36 24 12 re f*
.960784 .960784 .862745 rg
n 72 36 6 12 re f*
.960784 .960784 .862745 rg
n 78 36 66 12 re f*
.960784 .960784 .862745 rg
n 144 36 6 12 re f*
.960784 .960784 .862745 rg
n 150 36 18 12 re f*
.960784 .960784 .862745 rg
n 168 36 6 12 re f*
.960784 .960784 .862745 rg
n 180 36 30 12 re f*
.960784 .960784 .862745 rg
n 210 36 6 12 re f*
.960784 .960784 .862745 rg
n 216 36 12 12 re f*
.960784 .960784 .862745 rg
n 228 36 12 12 re f*
.960784 .960784 .862745 rg
n 0 12 12 12 re f*
.960784 .960784 .862745 rg
n 18 12 48 12 re f*
.960784 .960784 .862745 rg
n 72 12 12 12 re f*
.960784 .960784 .862745 rg
n 90 12 60 12 re f*
.960784 .960784 .862745 rg
n 150 12 6 12 re f*
.960784 .960784 .862745 rg
n 24 0 48 12 re f*
.960784 .960784 .862745 rg
n 72 0 6 12 re f*
.960784 .960784 .862745 rg
n 78 0 24 12 re f*
.960784 .960784 .862745 rg
n 102 0 12 12 re f*
BT 1 0 0 1 0 122 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (class) Tj /F3 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 1 rg (TestSequenceFunctions) Tj /F3 10 Tf 0 0 0 rg (\() Tj 0 0 0 rg (unittest) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (TestCase) Tj 0 0 0 rg (\):) Tj 0 0 0 rg  T*  T* (    ) Tj /F5 10 Tf 0 .501961 0 rg (def) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 1 rg (test_shuffle) Tj 0 0 0 rg (\() Tj 0 .501961 0 rg (self) Tj 0 0 0 rg (\):) Tj 0 0 0 rg  T* (        ) Tj /F6 10 Tf .25098 .501961 .501961 rg (# make sure the shuffled sequence does not lose any elements) Tj /F3 10 Tf 0 0 0 rg  T* (    ) Tj 0 0 0 rg (seq) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj 0 .501961 0 rg (list) Tj 0 0 0 rg (\() Tj 0 .501961 0 rg (range) Tj 0 0 0 rg (\() Tj .4 .4 .4 rg (10) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T* (        ) Tj 0 0 0 rg (random) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (shuffle) Tj 0 0 0 rg (\() Tj 0 0 0 rg (seq) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (        ) Tj 0 .501961 0 rg (self) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (seq) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (sort) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T* (        ) Tj 0 .501961 0 rg (self) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (assertEqual) Tj 0 0 0 rg (\() Tj 0 0 0 rg (seq) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 .501961 0 rg (range) Tj 0 0 0 rg (\() Tj .4 .4 .4 rg (10) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (if) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (__name__) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (==) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('__main__') Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (unittest) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (main) Tj 0 0 0 rg (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 209.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (nosetests ) Tj /F2 17.5 Tf 0 0 0 rg (framework) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 197.8236 cm
Q
q
1 0 0 1 62.69291 197.8236 cm
Q
q
1 0 0 1 62.69291 185.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Framework to make running tests easier.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 179.8236 cm
Q
q
1 0 0 1 62.69291 167.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can write tests with simple functions.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 161.8236 cm
Q
q
1 0 0 1 62.69291 82.62362 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 64.2 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 64.2 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Nicer command line interface, that can also do things like automatically start ) Tj /F4 10 Tf 0 0 0 rg (pdb) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 23 58.2 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 425.6898 60 re B*
Q
q
.960784 .960784 .862745 rg
n 204 0 198 12 re f*
BT 1 0 0 1 0 38 Tm 12 TL /F3 10 Tf 0 0 0 rg ($ nosetests) Tj T* ($ nosetests test_NAME.py) Tj T* ($ nosetests test_NAME.py:test1) Tj T* ($ nosetests --pdb                 ) Tj /F6 10 Tf .25098 .501961 .501961 rg (# start pdb if there are failures) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 82.62362 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
Q
 
endstream
endobj
63 0 obj
<< /Length 13835 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm 1.699398 Tw 12 TL /F1 10 Tf 0 0 0 rg (Standard output is hidden by default, unless a test fails! Use ) Tj /F3 10 Tf 0 0 0 rg (-s ) Tj /F1 10 Tf 0 0 0 rg (to make all standard output be) Tj T* 0 Tw (shown.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 741.0236 cm
Q
q
1 0 0 1 62.69291 708.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (nose ) Tj /F2 17.5 Tf 0 0 0 rg (example) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 602.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 96 re B*
Q
q
.960784 .960784 .862745 rg
n 0 72 24 12 re f*
.960784 .960784 .862745 rg
n 30 72 60 12 re f*
.960784 .960784 .862745 rg
n 96 72 36 12 re f*
.960784 .960784 .862745 rg
n 138 72 6 12 re f*
.960784 .960784 .862745 rg
n 0 48 18 12 re f*
.960784 .960784 .862745 rg
n 24 48 66 12 re f*
.960784 .960784 .862745 rg
n 90 48 18 12 re f*
.960784 .960784 .862745 rg
n 24 36 18 12 re f*
.960784 .960784 .862745 rg
n 48 36 6 12 re f*
.960784 .960784 .862745 rg
n 60 36 24 12 re f*
.960784 .960784 .862745 rg
n 84 36 6 12 re f*
.960784 .960784 .862745 rg
n 90 36 30 12 re f*
.960784 .960784 .862745 rg
n 120 36 6 12 re f*
.960784 .960784 .862745 rg
n 126 36 12 12 re f*
.960784 .960784 .862745 rg
n 138 36 12 12 re f*
.960784 .960784 .862745 rg
n 24 24 36 12 re f*
.960784 .960784 .862745 rg
n 60 24 6 12 re f*
.960784 .960784 .862745 rg
n 66 24 42 12 re f*
.960784 .960784 .862745 rg
n 108 24 6 12 re f*
.960784 .960784 .862745 rg
n 114 24 18 12 re f*
.960784 .960784 .862745 rg
n 132 24 6 12 re f*
.960784 .960784 .862745 rg
n 24 12 18 12 re f*
.960784 .960784 .862745 rg
n 42 12 6 12 re f*
.960784 .960784 .862745 rg
n 48 12 24 12 re f*
.960784 .960784 .862745 rg
n 72 12 12 12 re f*
.960784 .960784 .862745 rg
n 24 0 72 12 re f*
.960784 .960784 .862745 rg
n 96 0 6 12 re f*
.960784 .960784 .862745 rg
n 102 0 18 12 re f*
.960784 .960784 .862745 rg
n 120 0 6 12 re f*
.960784 .960784 .862745 rg
n 132 0 30 12 re f*
.960784 .960784 .862745 rg
n 162 0 6 12 re f*
.960784 .960784 .862745 rg
n 168 0 12 12 re f*
.960784 .960784 .862745 rg
n 180 0 12 12 re f*
BT 1 0 0 1 0 74 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (from) Tj /F3 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 1 rg (nose.tools) Tj /F3 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (import) Tj /F3 10 Tf 0 0 0 rg ( ) Tj .4 .4 .4 rg (*) Tj 0 0 0 rg  T*  T* /F5 10 Tf 0 .501961 0 rg (def) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 1 rg (test_sorted) Tj 0 0 0 rg (\(\):) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (seq) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj 0 .501961 0 rg (list) Tj 0 0 0 rg (\() Tj 0 .501961 0 rg (range) Tj 0 0 0 rg (\() Tj .4 .4 .4 rg (10) Tj 0 0 0 rg (\)\)) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (random) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (shuffle) Tj 0 0 0 rg (\() Tj 0 0 0 rg (seq) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (seq) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (sort) Tj 0 0 0 rg (\(\)) Tj 0 0 0 rg  T* (    ) Tj 0 0 0 rg (assert_equal) Tj 0 0 0 rg (\() Tj 0 0 0 rg (seq) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj 0 .501961 0 rg (range) Tj 0 0 0 rg (\() Tj .4 .4 .4 rg (10) Tj 0 0 0 rg (\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 569.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Basic atoms of unit tests) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 557.8236 cm
Q
q
1 0 0 1 62.69291 557.8236 cm
Q
q
1 0 0 1 62.69291 545.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Assertion) Tj /F1 10 Tf (: wiktionary: a condition expected to be true at a particular point.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 539.8236 cm
Q
q
1 0 0 1 62.69291 527.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Test functions: ) Tj /F1 10 Tf (Code that does stuff and makes ) Tj /F2 10 Tf (assertions ) Tj /F1 10 Tf (about expected results.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 521.8236 cm
Q
q
1 0 0 1 62.69291 509.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (setup ) Tj /F1 10 Tf (/ ) Tj /F2 10 Tf (teardown) Tj /F1 10 Tf (: Code that produces initial data structures/frees resources before/after tests.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 503.8236 cm
Q
q
1 0 0 1 62.69291 479.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.68748 Tw 12 TL /F2 10 Tf 0 0 0 rg (Test classes: ) Tj /F1 10 Tf (Combines functions and setup/teardown, allows you to use more inheritance to) Tj T* 0 Tw (simplify writing if needed.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 473.8236 cm
Q
q
1 0 0 1 62.69291 461.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Mock objects: ) Tj /F1 10 Tf (Objects which simulate an interface to facilitate testing.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 461.8236 cm
Q
q
1 0 0 1 62.69291 428.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Assertions) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 416.8236 cm
Q
q
1 0 0 1 62.69291 416.8236 cm
Q
q
1 0 0 1 62.69291 404.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The fundamental unit of a test. One test function or method can have many assertions in it.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 398.8236 cm
Q
q
1 0 0 1 62.69291 350.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 33 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Use ) Tj /F3 10 Tf 0 0 0 rg (assertions) Tj ( ) Tj (functions ) Tj /F1 10 Tf 0 0 0 rg (that do the following:) Tj T* ET
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Compare the arguments according to some rules to verify the assertion.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If the condition is false, raise ) Tj /F3 10 Tf 0 0 0 rg (AssertionError ) Tj /F1 10 Tf 0 0 0 rg (and print some useful error message.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 350.8236 cm
Q
q
1 0 0 1 62.69291 317.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Assertion example) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 299.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Example:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 293.8236 cm
Q
q
1 0 0 1 62.69291 293.8236 cm
Q
q
1 0 0 1 62.69291 248.6236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 30.2 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 30.2 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can simply use the ) Tj /F3 10 Tf 0 0 0 rg (assert ) Tj /F1 10 Tf 0 0 0 rg (keyword:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 445.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 36 12 re f*
.960784 .960784 .862745 rg
n 42 0 24 12 re f*
.960784 .960784 .862745 rg
n 66 0 6 12 re f*
.960784 .960784 .862745 rg
n 72 0 6 12 re f*
.960784 .960784 .862745 rg
n 78 0 6 12 re f*
.960784 .960784 .862745 rg
n 90 0 12 12 re f*
.960784 .960784 .862745 rg
n 108 0 6 12 re f*
.960784 .960784 .862745 rg
n 114 0 6 12 re f*
.960784 .960784 .862745 rg
n 126 0 114 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (assert) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (func) Tj 0 0 0 rg (\() Tj .4 .4 .4 rg (5) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (==) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (1) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("function is not 1") Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 242.6236 cm
Q
q
1 0 0 1 62.69291 111.4236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 116.2 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 116.2 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For better detail, you can use special assertion functions:) Tj T* ET
Q
Q
q
1 0 0 1 23 23 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 445.6898 84 re B*
Q
q
.960784 .960784 .862745 rg
n 0 60 6 12 re f*
.960784 .960784 .862745 rg
n 6 60 6 12 re f*
.960784 .960784 .862745 rg
n 12 60 6 12 re f*
.960784 .960784 .862745 rg
n 24 60 24 12 re f*
.960784 .960784 .862745 rg
n 48 60 6 12 re f*
.960784 .960784 .862745 rg
n 54 60 66 12 re f*
.960784 .960784 .862745 rg
n 120 60 6 12 re f*
.960784 .960784 .862745 rg
n 126 60 18 12 re f*
.960784 .960784 .862745 rg
n 144 60 12 12 re f*
.960784 .960784 .862745 rg
n 156 60 6 12 re f*
.960784 .960784 .862745 rg
n 162 60 6 12 re f*
.960784 .960784 .862745 rg
n 174 60 6 12 re f*
.960784 .960784 .862745 rg
n 180 60 6 12 re f*
.960784 .960784 .862745 rg
n 192 60 6 12 re f*
.960784 .960784 .862745 rg
n 198 60 18 12 re f*
.960784 .960784 .862745 rg
n 222 60 18 12 re f*
.960784 .960784 .862745 rg
n 240 60 12 12 re f*
.960784 .960784 .862745 rg
n 252 60 6 12 re f*
.960784 .960784 .862745 rg
n 258 60 6 12 re f*
.960784 .960784 .862745 rg
n 270 60 6 12 re f*
.960784 .960784 .862745 rg
n 276 60 6 12 re f*
.960784 .960784 .862745 rg
n 288 60 6 12 re f*
.960784 .960784 .862745 rg
n 294 60 12 12 re f*
.960784 .960784 .862745 rg
n 312 60 6 12 re f*
.960784 .960784 .862745 rg
n 0 36 84 12 re f*
.960784 .960784 .862745 rg
n 84 36 6 12 re f*
.960784 .960784 .862745 rg
n 96 36 30 12 re f*
.960784 .960784 .862745 rg
n 132 36 12 12 re f*
.960784 .960784 .862745 rg
n 150 36 18 12 re f*
.960784 .960784 .862745 rg
n 174 36 30 12 re f*
.960784 .960784 .862745 rg
n 210 36 18 12 re f*
.960784 .960784 .862745 rg
n 234 36 18 12 re f*
.960784 .960784 .862745 rg
n 258 36 18 12 re f*
.960784 .960784 .862745 rg
n 282 36 18 12 re f*
.960784 .960784 .862745 rg
n 306 36 36 12 re f*
.960784 .960784 .862745 rg
n 342 36 6 12 re f*
.960784 .960784 .862745 rg
n 0 24 6 12 re f*
.960784 .960784 .862745 rg
n 0 12 30 12 re f*
.960784 .960784 .862745 rg
n 36 12 12 12 re f*
.960784 .960784 .862745 rg
n 54 12 18 12 re f*
.960784 .960784 .862745 rg
n 78 12 36 12 re f*
.960784 .960784 .862745 rg
n 120 12 18 12 re f*
.960784 .960784 .862745 rg
n 144 12 18 12 re f*
.960784 .960784 .862745 rg
n 168 12 18 12 re f*
.960784 .960784 .862745 rg
n 192 12 18 12 re f*
.960784 .960784 .862745 rg
n 216 12 30 12 re f*
.960784 .960784 .862745 rg
n 246 12 6 12 re f*
.960784 .960784 .862745 rg
n 0 0 6 12 re f*
BT 1 0 0 1 0 62 Tm 12 TL /F3 10 Tf .4 .4 .4 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .501961 0 rg (self) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (assertEqual) Tj 0 0 0 rg (\() Tj 0 .501961 0 rg (set) Tj 0 0 0 rg (\([) Tj .4 .4 .4 rg (1) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (2) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (3) Tj 0 0 0 rg (]\),) Tj 0 0 0 rg ( ) Tj 0 .501961 0 rg (set) Tj 0 0 0 rg (\([) Tj .4 .4 .4 rg (1) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (2) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (4) Tj 0 0 0 rg (]\)) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (\)) Tj 0 0 0 rg  T*  T* /F5 10 Tf .823529 .254902 .227451 rg (AssertionError) Tj /F3 10 Tf 0 0 0 rg (:) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (Items) Tj 0 0 0 rg ( ) Tj /F5 10 Tf .666667 .133333 1 rg (in) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (the) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (first) Tj 0 0 0 rg ( ) Tj 0 .501961 0 rg (set) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (but) Tj 0 0 0 rg ( ) Tj /F5 10 Tf .666667 .133333 1 rg (not) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (the) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (second) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* .4 .4 .4 rg (3) Tj 0 0 0 rg  T* 0 0 0 rg (Items) Tj 0 0 0 rg ( ) Tj /F5 10 Tf .666667 .133333 1 rg (in) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (the) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (second) Tj 0 0 0 rg ( ) Tj 0 .501961 0 rg (set) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (but) Tj 0 0 0 rg ( ) Tj /F5 10 Tf .666667 .133333 1 rg (not) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 0 0 rg (the) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (first) Tj 0 0 0 rg (:) Tj 0 0 0 rg  T* .4 .4 .4 rg (4) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Look at how it prints exactly what the difference is. It combines testing and "print debugging".) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 111.4236 cm
Q
 
endstream
endobj
64 0 obj
<< /Length 6397 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 744.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (What assertions are available?) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 726.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (See the list of ) Tj /F3 10 Tf 0 0 0 rg (assert* ) Tj /F1 10 Tf 0 0 0 rg (methods at ) Tj 0 0 .501961 rg (https://docs.python.org/library/unittest.html#assert-methods) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 720.0236 cm
Q
q
1 0 0 1 62.69291 720.0236 cm
Q
q
1 0 0 1 62.69291 696.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.069318 Tw 12 TL /F1 10 Tf 0 0 0 rg (These standard library assertions are ) Tj /F4 10 Tf (methods ) Tj /F1 10 Tf (of the ) Tj /F3 10 Tf 0 0 0 rg (TestCase ) Tj /F1 10 Tf 0 0 0 rg (class, and thus you have to use) Tj T* 0 Tw /F3 10 Tf 0 0 0 rg (unittest ) Tj /F1 10 Tf 0 0 0 rg (to have these.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 696.0236 cm
Q
q
1 0 0 1 62.69291 663.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (List of Assertions available) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 221.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 432 re B*
Q
q
.960784 .960784 .862745 rg
n 0 408 102 12 re f*
.960784 .960784 .862745 rg
n 0 396 108 12 re f*
.960784 .960784 .862745 rg
n 0 384 144 12 re f*
.960784 .960784 .862745 rg
n 0 372 90 12 re f*
.960784 .960784 .862745 rg
n 0 360 66 12 re f*
.960784 .960784 .862745 rg
n 0 348 72 12 re f*
.960784 .960784 .862745 rg
n 0 336 66 12 re f*
.960784 .960784 .862745 rg
n 0 324 78 12 re f*
.960784 .960784 .862745 rg
n 0 312 108 12 re f*
.960784 .960784 .862745 rg
n 0 300 48 12 re f*
.960784 .960784 .862745 rg
n 0 288 48 12 re f*
.960784 .960784 .862745 rg
n 0 276 96 12 re f*
.960784 .960784 .862745 rg
n 0 264 72 12 re f*
.960784 .960784 .862745 rg
n 0 252 66 12 re f*
.960784 .960784 .862745 rg
n 0 240 90 12 re f*
.960784 .960784 .862745 rg
n 0 228 96 12 re f*
.960784 .960784 .862745 rg
n 0 216 60 12 re f*
.960784 .960784 .862745 rg
n 0 204 90 12 re f*
.960784 .960784 .862745 rg
n 0 192 90 12 re f*
.960784 .960784 .862745 rg
n 0 180 120 12 re f*
.960784 .960784 .862745 rg
n 0 168 120 12 re f*
.960784 .960784 .862745 rg
n 0 156 126 12 re f*
.960784 .960784 .862745 rg
n 0 144 84 12 re f*
.960784 .960784 .862745 rg
n 0 132 90 12 re f*
.960784 .960784 .862745 rg
n 0 120 66 12 re f*
.960784 .960784 .862745 rg
n 0 108 114 12 re f*
.960784 .960784 .862745 rg
n 0 96 132 12 re f*
.960784 .960784 .862745 rg
n 0 84 72 12 re f*
.960784 .960784 .862745 rg
n 0 72 108 12 re f*
.960784 .960784 .862745 rg
n 0 60 114 12 re f*
.960784 .960784 .862745 rg
n 0 48 114 12 re f*
.960784 .960784 .862745 rg
n 0 36 84 12 re f*
.960784 .960784 .862745 rg
n 0 24 60 12 re f*
.960784 .960784 .862745 rg
n 0 12 96 12 re f*
.960784 .960784 .862745 rg
n 0 0 42 12 re f*
BT 1 0 0 1 0 410 Tm 12 TL /F3 10 Tf 0 0 0 rg (assertAlmostEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertAlmostEquals) Tj 0 0 0 rg  T* 0 0 0 rg (assertDictContainsSubset) Tj 0 0 0 rg  T* 0 0 0 rg (assertDictEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertEquals) Tj 0 0 0 rg  T* 0 0 0 rg (assertFalse) Tj 0 0 0 rg  T* 0 0 0 rg (assertGreater) Tj 0 0 0 rg  T* 0 0 0 rg (assertGreaterEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertIn) Tj 0 0 0 rg  T* 0 0 0 rg (assertIs) Tj 0 0 0 rg  T* 0 0 0 rg (assertIsInstance) Tj 0 0 0 rg  T* 0 0 0 rg (assertIsNone) Tj 0 0 0 rg  T* 0 0 0 rg (assertIsNot) Tj 0 0 0 rg  T* 0 0 0 rg (assertIsNotNone) Tj 0 0 0 rg  T* 0 0 0 rg (assertItemsEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertLess) Tj 0 0 0 rg  T* 0 0 0 rg (assertLessEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertListEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertMultiLineEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertNotAlmostEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertNotAlmostEquals) Tj 0 0 0 rg  T* 0 0 0 rg (assertNotEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertNotEquals) Tj 0 0 0 rg  T* 0 0 0 rg (assertNotIn) Tj 0 0 0 rg  T* 0 0 0 rg (assertNotIsInstance) Tj 0 0 0 rg  T* 0 0 0 rg (assertNotRegexpMatches) Tj 0 0 0 rg  T* 0 0 0 rg (assertRaises) Tj 0 0 0 rg  T* 0 0 0 rg (assertRaisesRegexp) Tj 0 0 0 rg  T* 0 0 0 rg (assertRegexpMatches) Tj 0 0 0 rg  T* 0 0 0 rg (assertSequenceEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertSetEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assertTrue) Tj 0 0 0 rg  T* 0 0 0 rg (assertTupleEqual) Tj 0 0 0 rg  T* 0 0 0 rg (assert_) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 188.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Full example: A working test \(permutations\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 170.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get the ) Tj 0 0 .501961 rg (perm.py ) Tj 0 0 0 rg (and ) Tj 0 0 .501961 rg (test_perm_ut.py ) Tj 0 0 0 rg (files from the repository. This is a simple permutations function.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 152.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Instructions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 146.8236 cm
Q
q
1 0 0 1 62.69291 146.8236 cm
Q
q
1 0 0 1 62.69291 134.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Run these unit tests \() Tj /F3 10 Tf 0 0 0 rg (python) Tj ( ) Tj (test_perm_ut.py) Tj /F1 10 Tf 0 0 0 rg (\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 128.8236 cm
Q
q
1 0 0 1 62.69291 116.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Write a ) Tj /F4 10 Tf (factorial ) Tj /F1 10 Tf (function.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 110.8236 cm
Q
q
1 0 0 1 62.69291 98.82362 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (... and test for that factorial function.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 98.82362 cm
Q
 
endstream
endobj
65 0 obj
<< /Length 11188 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 744.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (How to debug a failing test) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 732.0236 cm
Q
q
1 0 0 1 62.69291 732.0236 cm
Q
q
1 0 0 1 62.69291 720.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Is the test correct? \(side point: do you make tests for tests?\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
Q
q
1 0 0 1 62.69291 702.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Run just that one test: ) Tj /F3 10 Tf 0 0 0 rg (python) Tj ( ) Tj (module_name.py) Tj ( ) Tj (ClassName.MethodName) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 696.0236 cm
Q
q
1 0 0 1 62.69291 684.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use the debugger \(next slide\), add in print statements, or debug however you normally do.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 651.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Testing and debugging) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 639.0236 cm
Q
q
1 0 0 1 62.69291 639.0236 cm
Q
q
1 0 0 1 62.69291 615.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .266651 Tw 12 TL /F1 10 Tf 0 0 0 rg (When using other testing packages, you can give options like ) Tj /F3 10 Tf 0 0 0 rg (--pdb ) Tj /F1 10 Tf 0 0 0 rg (to cause the Python debugger) Tj T* 0 Tw (to start when there are exceptions \(or failures\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 609.0236 cm
Q
q
1 0 0 1 62.69291 585.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.044104 Tw 12 TL /F1 10 Tf 0 0 0 rg (This is not easy with ) Tj /F3 10 Tf 0 0 0 rg (unittest ) Tj /F1 10 Tf 0 0 0 rg (without weird hacks, so this talk excludes it \(slides moved to the) Tj T* 0 Tw (end\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 585.0236 cm
Q
q
1 0 0 1 62.69291 552.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Testing and debugging) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 540.0236 cm
Q
q
1 0 0 1 62.69291 540.0236 cm
Q
q
1 0 0 1 62.69291 516.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .266651 Tw 12 TL /F1 10 Tf 0 0 0 rg (When using other testing packages, you can give options like ) Tj /F3 10 Tf 0 0 0 rg (--pdb ) Tj /F1 10 Tf 0 0 0 rg (to cause the Python debugger) Tj T* 0 Tw (to start when there are exceptions \(or failures\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 510.0236 cm
Q
q
1 0 0 1 62.69291 486.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.044104 Tw 12 TL /F1 10 Tf 0 0 0 rg (This is not easy with ) Tj /F3 10 Tf 0 0 0 rg (unittest ) Tj /F1 10 Tf 0 0 0 rg (without weird hacks, so this talk excludes it \(slides moved to the) Tj T* 0 Tw (end\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 486.0236 cm
Q
q
1 0 0 1 62.69291 453.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Example: Test inheritance \(Fibonacci numbers\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 441.0236 cm
Q
q
1 0 0 1 62.69291 441.0236 cm
Q
q
1 0 0 1 62.69291 429.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (fib.py ) Tj 0 0 0 rg (contains two functions to calculate the ) Tj /F3 10 Tf 0 0 0 rg (n) Tj /F1 10 Tf 0 0 0 rg (th Fibonacci number.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 423.0236 cm
Q
q
1 0 0 1 62.69291 369.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 27 cm
q
BT 1 0 0 1 0 14 Tm 1.111412 Tw 12 TL /F1 10 Tf 0 0 0 rg (In ) Tj 0 0 .501961 rg (test_fib.py ) Tj 0 0 0 rg (you see a class-based method of testing both the functions. This module compatible) Tj T* 0 Tw (with both ) Tj /F3 10 Tf 0 0 0 rg (unittest ) Tj /F1 10 Tf 0 0 0 rg (and ) Tj /F3 10 Tf 0 0 0 rg (nose) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 23 21 cm
Q
q
1 0 0 1 23 21 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .968221 Tw (Notice that both functions are expected to pass the exact same tests. This is a case of using) Tj T* 0 Tw (inheritance to simplify writing.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 369.0236 cm
Q
q
1 0 0 1 62.69291 351.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Instructions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 345.0236 cm
Q
q
1 0 0 1 62.69291 345.0236 cm
Q
q
1 0 0 1 62.69291 333.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Use ) Tj /F3 10 Tf 0 0 0 rg (nosetests ) Tj /F1 10 Tf 0 0 0 rg (to run ) Tj /F3 10 Tf 0 0 0 rg (TestFib1 ) Tj /F1 10 Tf 0 0 0 rg (only. Does it pass?) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 327.0236 cm
Q
q
1 0 0 1 62.69291 315.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Use ) Tj /F3 10 Tf 0 0 0 rg (nosetests ) Tj /F1 10 Tf 0 0 0 rg (to run ) Tj /F3 10 Tf 0 0 0 rg (TestFib2 ) Tj /F1 10 Tf 0 0 0 rg (only. Does it pass?) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 309.0236 cm
Q
q
1 0 0 1 62.69291 297.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If any don't pass, use ) Tj /F3 10 Tf 0 0 0 rg (--pdb ) Tj /F1 10 Tf 0 0 0 rg (or ) Tj /F3 10 Tf 0 0 0 rg (--pdb-fail ) Tj /F1 10 Tf 0 0 0 rg (to examine the situation, if you think it will help.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 291.0236 cm
Q
q
1 0 0 1 62.69291 279.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Fix the problem until the test suite passes.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 279.0236 cm
Q
q
1 0 0 1 62.69291 246.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Example: Test-driven development \(counting function\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 234.0236 cm
Q
q
1 0 0 1 62.69291 234.0236 cm
Q
q
1 0 0 1 62.69291 204.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A function that returns the counts of items in an iterable as a dictionary.) Tj T* ET
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Example: ) Tj /F3 10 Tf 0 0 0 rg ([1,) Tj ( ) Tj (1,) Tj ( ) Tj (5,) Tj ( ) Tj (]) Tj ( ) Tj ( ) Tj (--) Tj (>) Tj ( ) Tj ( ) Tj ( ) Tj ({1:2,) Tj ( ) Tj (5:1}) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 198.0236 cm
Q
q
1 0 0 1 62.69291 186.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Get ) Tj 0 0 .501961 rg (count.py ) Tj 0 0 0 rg (and ) Tj 0 0 .501961 rg (test_count_ut.py ) Tj 0 0 0 rg (from the repository.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 186.0236 cm
Q
q
1 0 0 1 62.69291 168.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Instructions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 162.0236 cm
Q
q
1 0 0 1 62.69291 162.0236 cm
Q
q
1 0 0 1 62.69291 150.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Run the test module. Notice it fails because ) Tj /F3 10 Tf 0 0 0 rg (count.py ) Tj /F1 10 Tf 0 0 0 rg (is empty but there is one test.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 144.0236 cm
Q
q
1 0 0 1 62.69291 132.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Write a ) Tj /F3 10 Tf 0 0 0 rg (count ) Tj /F1 10 Tf 0 0 0 rg (function to make the test pass.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 126.0236 cm
Q
q
1 0 0 1 62.69291 78.02362 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Do the following over and over until you are satisfied:) Tj T* ET
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Think: What else should this function return \(hint: the example above\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write a test script for that example.) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
66 0 obj
<< /Length 10963 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 739.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 12.15748 Tm  T* ET
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Run the test script: notice it fails.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Fix the function so that it passes.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 739.8661 cm
Q
q
1 0 0 1 62.69291 706.8661 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Recommendations for making tests) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 694.8661 cm
Q
q
1 0 0 1 62.69291 694.8661 cm
Q
q
1 0 0 1 62.69291 670.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .372209 Tw 12 TL /F1 10 Tf 0 0 0 rg (Think about what axes can be used to simplify the problem. For example, if the problem scales as a) Tj T* 0 Tw (function of ) Tj /F3 10 Tf 0 0 0 rg (n) Tj /F1 10 Tf 0 0 0 rg (, write tests for low ) Tj /F3 10 Tf 0 0 0 rg (n ) Tj /F1 10 Tf 0 0 0 rg (where the solution is easily checked in your head.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 664.8661 cm
Q
q
1 0 0 1 62.69291 652.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Try to think of all important boundary cases to handle.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 646.8661 cm
Q
q
1 0 0 1 62.69291 622.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.21784 Tw 12 TL /F1 10 Tf 0 0 0 rg (Testing is easiest for ) Tj /F3 10 Tf 0 0 0 rg (pure) Tj ( ) Tj (functions) Tj /F1 10 Tf 0 0 0 rg (: the return value depends only on arguments and the) Tj T* 0 Tw (function does not have any side effects.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 616.8661 cm
Q
q
1 0 0 1 62.69291 544.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.831163 Tw (You will be tempted to run the code over and over during development as part of your iterative) Tj T* 0 Tw (development cycle. Instead,) Tj T* ET
Q
Q
q
1 0 0 1 23 39 cm
Q
q
1 0 0 1 23 39 cm
Q
q
1 0 0 1 23 27 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Put it in a test instead - it's the same amount of work.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 21 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .924651 Tw 12 TL /F1 10 Tf 0 0 0 rg (If there is an exception or ) Tj /F3 10 Tf 0 0 0 rg (AssertionError) Tj /F1 10 Tf 0 0 0 rg (, then use ) Tj /F3 10 Tf 0 0 0 rg (--pdb ) Tj /F1 10 Tf 0 0 0 rg (or ) Tj /F3 10 Tf 0 0 0 rg (--pdb-fail ) Tj /F1 10 Tf 0 0 0 rg (to drop to a) Tj T* 0 Tw (Python shell at that point and figure out what the problem is.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 538.8661 cm
Q
q
1 0 0 1 62.69291 526.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Have two windows open: one with the editor, and one to run ) Tj /F3 10 Tf 0 0 0 rg (nosetests ) Tj /F1 10 Tf 0 0 0 rg (over and over again.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 526.8661 cm
Q
q
1 0 0 1 62.69291 493.8661 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Conclusions) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 481.8661 cm
Q
q
1 0 0 1 62.69291 481.8661 cm
Q
q
1 0 0 1 62.69291 469.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Testing is a concept that spans all languages and programming paradigms.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 463.8661 cm
Q
q
1 0 0 1 62.69291 397.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Tests should be:) Tj T* ET
Q
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 33 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Fast) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Automatic) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Extensive) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 391.8661 cm
Q
q
1 0 0 1 62.69291 379.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (We have looked at the ) Tj /F3 10 Tf 0 0 0 rg (unittest ) Tj /F1 10 Tf 0 0 0 rg (and ) Tj /F3 10 Tf 0 0 0 rg (nose ) Tj /F1 10 Tf 0 0 0 rg (frameworks for testing in Python.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 373.8661 cm
Q
q
1 0 0 1 62.69291 349.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.739269 Tw (Many standard development processes integrate into testing, and can save you a lot of time:) Tj T* 0 Tw (debugging, profiling, release, ...) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 349.8661 cm
Q
q
1 0 0 1 62.69291 316.8661 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Extensions we haven't covered) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 304.8661 cm
Q
q
1 0 0 1 62.69291 304.8661 cm
Q
q
1 0 0 1 62.69291 262.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Testing non-pure functions: You'll need to make initial data, run function, and test side-effects.) Tj T* ET
Q
Q
q
1 0 0 1 23 21 cm
Q
q
1 0 0 1 23 21 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 5.819269 Tw 12 TL /F2 10 Tf 0 0 0 rg (Mock objects ) Tj /F1 10 Tf (can be used to test the effect a function has on another object.) Tj T* 0 Tw /F3 10 Tf 0 0 0 rg (unittest.mock ) Tj /F1 10 Tf 0 0 0 rg (and other libraries automate this.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 256.8661 cm
Q
q
1 0 0 1 62.69291 244.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Code coverage: automatic tools to show you what lines have been run by tests.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 238.8661 cm
Q
q
1 0 0 1 62.69291 226.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Levels of testing: unit testing, integration testing, system testing, etc.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 220.8661 cm
Q
q
1 0 0 1 62.69291 208.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Doctests: tests in docstrings automatically run. Serve as documentation.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 208.8661 cm
Q
q
1 0 0 1 62.69291 154.8661 cm
q
BT 1 0 0 1 0 24.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Extra: Invoking the python debugger \(not with) Tj T* /F3 17.5 Tf 0 0 0 rg (unittest) Tj /F2 17.5 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 136.8661 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If a test fails, you can automatically invoke the debugger:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 130.8661 cm
Q
q
1 0 0 1 62.69291 130.8661 cm
Q
q
1 0 0 1 62.69291 100.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (nosetests) Tj ( ) Tj (--pdb ) Tj /F1 10 Tf 0 0 0 rg (starts pdb when there is an exception or assertion failure.) Tj T* ET
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Note: for older versions, you must use ) Tj /F3 10 Tf 0 0 0 rg (-pdb ) Tj /F1 10 Tf 0 0 0 rg (or ) Tj /F3 10 Tf 0 0 0 rg (--pdb-failures) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 100.8661 cm
Q
q
1 0 0 1 62.69291 82.86614 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Useful pdb commands:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 76.86614 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
Q
 
endstream
endobj
67 0 obj
<< /Length 9128 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 753.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (l ) Tj /F1 10 Tf 0 0 0 rg (or ) Tj /F3 10 Tf 0 0 0 rg (list ) Tj /F1 10 Tf 0 0 0 rg (- list lines of code around the point) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 747.0236 cm
Q
q
1 0 0 1 62.69291 735.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (bt ) Tj /F1 10 Tf 0 0 0 rg (or ) Tj /F3 10 Tf 0 0 0 rg (backtrace ) Tj /F1 10 Tf 0 0 0 rg (- list full call stack.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 729.0236 cm
Q
q
1 0 0 1 62.69291 717.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (u ) Tj /F1 10 Tf 0 0 0 rg (or ) Tj /F3 10 Tf 0 0 0 rg (up ) Tj /F1 10 Tf 0 0 0 rg (and ) Tj /F3 10 Tf 0 0 0 rg (d ) Tj /F1 10 Tf 0 0 0 rg (or ) Tj /F3 10 Tf 0 0 0 rg (down ) Tj /F1 10 Tf 0 0 0 rg (- Go up or down the call stack) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 711.0236 cm
Q
q
1 0 0 1 62.69291 699.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (p ) Tj /F1 10 Tf 0 0 0 rg (or ) Tj /F3 10 Tf 0 0 0 rg (print ) Tj /F1 10 Tf 0 0 0 rg (- print any variable or expression) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 693.0236 cm
Q
q
1 0 0 1 62.69291 681.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Any other input: evaluate that line at that point \(i.e. evaluate an expression\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 681.0236 cm
Q
q
1 0 0 1 62.69291 663.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Full list of commands: ) Tj 0 0 .501961 rg (https://docs.python.org/2/library/pdb.html#debugger-commands) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 630.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Invoking the python debugger \() Tj /F3 17.5 Tf 0 0 0 rg (unittest) Tj /F2 17.5 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 618.0236 cm
Q
q
1 0 0 1 62.69291 618.0236 cm
Q
q
1 0 0 1 62.69291 606.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (There is not an automatic way to do this with ) Tj /F3 10 Tf 0 0 0 rg (unittest) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 600.0236 cm
Q
q
1 0 0 1 62.69291 576.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.442651 Tw 12 TL /F1 10 Tf 0 0 0 rg (Option 1\) add ) Tj /F3 10 Tf 0 0 0 rg (import) Tj ( ) Tj (pdb) Tj ( ) Tj (;) Tj ( ) Tj (pdb.set_trace\(\) ) Tj /F1 10 Tf 0 0 0 rg (in the function before the error you want to) Tj T* 0 Tw (debug.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 570.0236 cm
Q
q
1 0 0 1 62.69291 453.6236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 101.4 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 89.4 cm
q
BT 1 0 0 1 0 14 Tm .142485 Tw 12 TL /F1 10 Tf 0 0 0 rg (Option 2\) To emulate ) Tj /F3 10 Tf 0 0 0 rg (--pdb ) Tj /F1 10 Tf 0 0 0 rg (of nose, you can monkey-patch ) Tj /F3 10 Tf 0 0 0 rg (unittest ) Tj /F1 10 Tf 0 0 0 rg (to make it work, by adding) Tj T* 0 Tw (this line before unittest.main\(\):) Tj T* ET
Q
Q
q
1 0 0 1 23 56.2 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 576 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 36 12 re f*
.960784 .960784 .862745 rg
n 42 0 48 12 re f*
.960784 .960784 .862745 rg
n 90 0 6 12 re f*
.960784 .960784 .862745 rg
n 102 0 48 12 re f*
.960784 .960784 .862745 rg
n 150 0 6 12 re f*
.960784 .960784 .862745 rg
n 156 0 48 12 re f*
.960784 .960784 .862745 rg
n 204 0 6 12 re f*
.960784 .960784 .862745 rg
n 210 0 18 12 re f*
.960784 .960784 .862745 rg
n 234 0 6 12 re f*
.960784 .960784 .862745 rg
n 246 0 36 12 re f*
.960784 .960784 .862745 rg
n 288 0 24 12 re f*
.960784 .960784 .862745 rg
n 312 0 6 12 re f*
.960784 .960784 .862745 rg
n 318 0 6 12 re f*
.960784 .960784 .862745 rg
n 324 0 24 12 re f*
.960784 .960784 .862745 rg
n 348 0 6 12 re f*
.960784 .960784 .862745 rg
n 354 0 12 12 re f*
.960784 .960784 .862745 rg
n 366 0 12 12 re f*
.960784 .960784 .862745 rg
n 378 0 6 12 re f*
.960784 .960784 .862745 rg
n 390 0 48 12 re f*
.960784 .960784 .862745 rg
n 438 0 6 12 re f*
.960784 .960784 .862745 rg
n 444 0 48 12 re f*
.960784 .960784 .862745 rg
n 492 0 6 12 re f*
.960784 .960784 .862745 rg
n 498 0 30 12 re f*
.960784 .960784 .862745 rg
n 528 0 6 12 re f*
.960784 .960784 .862745 rg
n 534 0 24 12 re f*
.960784 .960784 .862745 rg
n 558 0 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 .501961 0 rg (import) Tj /F3 10 Tf 0 0 0 rg ( ) Tj /F5 10 Tf 0 0 1 rg (unittest) Tj /F3 10 Tf 0 0 0 rg (;) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (unittest) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (TestCase) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (run) Tj 0 0 0 rg ( ) Tj .4 .4 .4 rg (=) Tj 0 0 0 rg ( ) Tj /F5 10 Tf 0 .501961 0 rg (lambda) Tj /F3 10 Tf 0 0 0 rg ( ) Tj 0 .501961 0 rg (self) Tj 0 0 0 rg (,) Tj .4 .4 .4 rg (*) Tj 0 0 0 rg (args) Tj 0 0 0 rg (,) Tj .4 .4 .4 rg (**) Tj 0 0 0 rg (kw) Tj 0 0 0 rg (:) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (unittest) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (TestCase) Tj .4 .4 .4 rg (.) Tj 0 0 0 rg (debug) Tj 0 0 0 rg (\() Tj 0 .501961 0 rg (self) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 23 30.2 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Then, run the test under ) Tj /F3 10 Tf 0 0 0 rg (pdb) Tj /F1 10 Tf 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 445.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL ($ pdb test_NAME.py) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 453.6236 cm
Q
q
1 0 0 1 62.69291 399.6236 cm
q
BT 1 0 0 1 0 24.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Example: Debugging \(prime numbers\) \(not with) Tj T* /F3 17.5 Tf 0 0 0 rg (unittest) Tj /F2 17.5 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 387.6236 cm
Q
q
1 0 0 1 62.69291 387.6236 cm
Q
q
1 0 0 1 62.69291 375.6236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (prime.py ) Tj 0 0 0 rg (contains a function for testing for primality of numbers.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 369.6236 cm
Q
q
1 0 0 1 62.69291 357.6236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Run ) Tj 0 0 .501961 rg (test_prime_ut.py ) Tj 0 0 0 rg (in nosetests.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 351.6236 cm
Q
q
1 0 0 1 62.69291 327.6236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .652093 Tw 12 TL /F1 10 Tf 0 0 0 rg (When it fails, add the magic line from the last slide and run with ) Tj /F3 10 Tf 0 0 0 rg (pdb ) Tj /F1 10 Tf 0 0 0 rg (instead of ) Tj /F3 10 Tf 0 0 0 rg (python ) Tj /F1 10 Tf 0 0 0 rg (to invoke) Tj T* 0 Tw (the debugger and examine the situation.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 321.6236 cm
Q
q
1 0 0 1 62.69291 309.6236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Try to fix the line in the debugger so that it works.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 303.6236 cm
Q
q
1 0 0 1 62.69291 291.6236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Copy your fix to the module, then repeat.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 291.6236 cm
Q
 
endstream
endobj
68 0 obj
<< /Nums [ 0 69 0 R 1 70 0 R 2 71 0 R 3 72 0 R 4 73 0 R 
  5 74 0 R 6 75 0 R ] >>
endobj
69 0 obj
<< /S /D /St 1 >>
endobj
70 0 obj
<< /S /D /St 2 >>
endobj
71 0 obj
<< /S /D /St 3 >>
endobj
72 0 obj
<< /S /D /St 4 >>
endobj
73 0 obj
<< /S /D /St 5 >>
endobj
74 0 obj
<< /S /D /St 6 >>
endobj
75 0 obj
<< /S /D /St 7 >>
endobj
xref
0 76
0000000000 65535 f
0000000075 00000 n
0000000161 00000 n
0000000271 00000 n
0000000386 00000 n
0000000494 00000 n
0000000612 00000 n
0000000820 00000 n
0000001021 00000 n
0000001233 00000 n
0000001418 00000 n
0000001664 00000 n
0000001873 00000 n
0000001987 00000 n
0000002104 00000 n
0000002333 00000 n
0000002543 00000 n
0000002759 00000 n
0000002976 00000 n
0000003201 00000 n
0000003444 00000 n
0000003660 00000 n
0000003881 00000 n
0000004099 00000 n
0000004325 00000 n
0000004575 00000 n
0000004785 00000 n
0000005001 00000 n
0000005219 00000 n
0000005445 00000 n
0000005688 00000 n
0000005797 00000 n
0000006083 00000 n
0000006161 00000 n
0000006281 00000 n
0000006406 00000 n
0000006587 00000 n
0000006728 00000 n
0000006891 00000 n
0000007028 00000 n
0000007168 00000 n
0000007302 00000 n
0000007439 00000 n
0000007569 00000 n
0000007712 00000 n
0000007840 00000 n
0000007975 00000 n
0000008123 00000 n
0000008269 00000 n
0000008432 00000 n
0000008577 00000 n
0000008716 00000 n
0000008855 00000 n
0000009020 00000 n
0000009192 00000 n
0000009342 00000 n
0000009471 00000 n
0000009618 00000 n
0000009793 00000 n
0000009952 00000 n
0000010115 00000 n
0000010221 00000 n
0000019464 00000 n
0000031614 00000 n
0000045507 00000 n
0000051961 00000 n
0000063207 00000 n
0000074228 00000 n
0000083413 00000 n
0000083515 00000 n
0000083552 00000 n
0000083589 00000 n
0000083626 00000 n
0000083663 00000 n
0000083700 00000 n
0000083737 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com)
 [(\261\354\363\022CH\240\235\002\336\2516#\002\200\027) (\261\354\363\022CH\240\235\002\336\2516#\002\200\027)]
 /Info 31 0 R /Root 30 0 R /Size 76 >>
startxref
83774
%%EOF
